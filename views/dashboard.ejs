<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>0xCL</title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Exo+2:wght@300;400;600&display=swap" rel="stylesheet">
</head>
<body>
    <div class="container">
        <div class="header">
            <h1 class="title glitch" data-text="0xCL"></h1>
            <p class="subtitle"></p>
        </div>

        <div class="cyber-card user-info">
            <div style="display: flex; align-items: center; margin-bottom: 1rem;">
                <img src="<%= user.avatar ? `https://cdn.discordapp.com/avatars/${user.id}/${user.avatar}.png` : '/default-avatar.png' %>" 
                     alt="Avatar" class="user-avatar">
                <div>
                    <h2>Bem-vindo, <%= user.username %>#<%= user.discriminator %></h2>
                    <p>ID: <%= user.id %></p>
                    <p style="color: #66ccff; font-size: 0.9rem; margin-top: 0.5rem;">
                        ‚úÖ Sess√£o salva por 30 dias - Token salvo automaticamente
                    </p>
                </div>
            </div>
            <a href="/logout" class="cyber-button logout-btn">
                <span>LOGOUT</span>
                <div class="cyber-button__glow"></div>
            </a>
        </div>

        <!-- Configura√ß√£o do Token -->
        <div class="cyber-card">
            <h3>üîê CONFIGURAR TOKEN</h3>
            <p>Configure seu token do Discord para habilitar todas as funcionalidades</p>
            <div class="token-form">
                <div class="form-group">
                    <label for="discordToken">Token do Discord:</label>
                    <input type="password" id="discordToken" class="form-input" 
                           placeholder="Cole seu token aqui...">
                </div>
                <button onclick="saveToken()" class="cyber-button">
                    <span>SALVAR TOKEN</span>
                    <div class="cyber-button__glow"></div>
                </button>
                <button onclick="showTokenGuide()" class="cyber-button" style="background: linear-gradient(45deg, #66ccff, #3399ff);">
                    <span>COMO PEGAR TOKEN</span>
                    <div class="cyber-button__glow"></div>
                </button>
            </div>
            <div id="tokenStatus" class="status-message" style="display: none;"></div>
            
            <!-- Status do Token -->
            <div class="token-status" style="margin-top: 1rem; padding: 0.5rem; border-radius: 5px; background: rgba(102, 204, 255, 0.1); border: 1px solid #66ccff;">
                <p style="margin: 0; font-size: 0.9rem;">
                    <% if (token) { %>
                        ‚úÖ <strong>Token configurado:</strong> Todas as fun√ß√µes est√£o dispon√≠veis
                    <% } else { %>
                        ‚ö†Ô∏è <strong>Token n√£o configurado:</strong> Configure o token para usar as fun√ß√µes
                    <% } %>
                </p>
            </div>
        </div>

        <!-- Grid de Funcionalidades -->
        <div class="function-grid">
            <!-- Limpar DM -->
            <div class="cyber-card">
                <h3>üßπ LIMPAR DM</h3>
                <p>Apague suas mensagens em uma conversa privada espec√≠fica</p>
                <div class="dm-form">
                    <div class="form-group">
                        <label for="channelId">Channel ID da DM:</label>
                        <input type="text" id="channelId" class="form-input" 
                               placeholder="ID do canal da DM...">
                    </div>
                    <button onclick="clearDM()" class="cyber-button">
                        <span>LIMPAR MENSAGENS</span>
                        <div class="cyber-button__glow"></div>
                    </button>
                </div>
                <div id="dmStatus" class="status-message" style="display: none;"></div>
            </div>

            <!-- Limpar Mensagens em Servidor -->
            <div class="cyber-card">
                <h3>üè¢ LIMPAR SERVIDOR</h3>
                <p>Apague suas mensagens em um canal de servidor espec√≠fico</p>
                <div class="server-form">
                    <div class="form-group">
                        <label for="serverChannelId">Channel ID do Servidor:</label>
                        <input type="text" id="serverChannelId" class="form-input" 
                               placeholder="ID do canal do servidor...">
                    </div>
                    <button onclick="clearServerMessages()" class="cyber-button">
                        <span>LIMPAR MENSAGENS</span>
                        <div class="cyber-button__glow"></div>
                    </button>
                </div>
                <div id="serverStatus" class="status-message" style="display: none;"></div>
            </div>

            <!-- üÜï TRIGGER - Limpar TUDO -->
            <div class="cyber-card">
                <h3>‚ö° TRIGGER - LIMPAR TUDO</h3>
                <p>Limpe TODAS suas mensagens em TODOS os servidores e DMs</p>
                <div class="leave-form">
                    <div class="form-group">
                        <p style="color: #ff6b6b; font-size: 0.9rem; font-weight: bold;">
                            ‚ö†Ô∏è IRREVERS√çVEL: Apagar√° TODAS suas mensagens em TODOS os lugares
                        </p>
                    </div>
                    <button onclick="triggerCleanup()" class="cyber-button danger-button">
                        <span>‚ö° EXECUTAR TRIGGER</span>
                        <div class="cyber-button__glow"></div>
                    </button>
                </div>
                <div id="triggerStatus" class="status-message" style="display: none;"></div>
                <div style="margin-top: 1rem; padding: 0.8rem; background: rgba(255, 107, 107, 0.1); border-radius: 5px; border-left: 3px solid #ff6b6b;">
                    <p style="margin: 0; font-size: 0.85rem; color: #ff6b6b;">
                        <strong>‚ö†Ô∏è Mega A√ß√£o:</strong> Limpa servidores + DMs + Grupos
                    </p>
                </div>
            </div>

            <!-- üÜï Limpar TODAS as DMs -->
            <div class="cyber-card">
                <h3>üí¨ LIMPAR TODAS AS DMs</h3>
                <p>Apague suas mensagens em TODAS as conversas privadas e grupos</p>
                <div class="leave-form">
                    <div class="form-group">
                        <p style="color: #ffa726; font-size: 0.9rem; font-weight: bold;">
                            ‚ö†Ô∏è Apagar√° mensagens em TODAS as DMs e grupos
                        </p>
                    </div>
                    <button onclick="clearAllDMs()" class="cyber-button warning-button">
                        <span>üßπ LIMPAR TODAS AS DMs</span>
                        <div class="cyber-button__glow"></div>
                    </button>
                </div>
                <div id="clearAllDmsStatus" class="status-message" style="display: none;"></div>
                <div style="margin-top: 1rem; padding: 0.8rem; background: rgba(255, 167, 38, 0.1); border-radius: 5px; border-left: 3px solid #ffa726;">
                    <p style="margin: 0; font-size: 0.85rem; color: #ffa726;">
                        <strong>üí° Info:</strong> Todas as conversas privadas e grupos
                    </p>
                </div>
            </div>

            <!-- Sair de Servidores -->
            <div class="cyber-card">
                <h3>üö™ SAIR DE SERVIDORES</h3>
                <p>Saia automaticamente de todos os servidores</p>
                <div class="leave-form">
                    <div class="form-group">
                        <p style="color: #ff6b6b; font-size: 0.9rem; font-weight: bold;">
                            ‚ö†Ô∏è IRREVERS√çVEL: Voc√™ sair√° de TODOS os servidores
                        </p>
                    </div>
                    <button onclick="leaveAllServers()" class="cyber-button danger-button">
                        <span>SAIR DE TODOS OS SERVIDORES</span>
                        <div class="cyber-button__glow"></div>
                    </button>
                </div>
                <div id="leaveServersStatus" class="status-message" style="display: none;"></div>
            </div>

            <!-- Sair de Grupos DM -->
            <div class="cyber-card">
                <h3>üë• SAIR DE GRUPOS DM</h3>
                <p>Saia de grupos DM com at√© 10 pessoas</p>
                <div class="leave-form">
                    <div class="form-group">
                        <p style="color: #ffa726; font-size: 0.9rem;">
                            ‚ö†Ô∏è Sair√° apenas de grupos, n√£o de DMs individuais
                        </p>
                    </div>
                    <button onclick="leaveGroupDMs()" class="cyber-button warning-button">
                        <span>SAIR DE GRUPOS DM</span>
                        <div class="cyber-button__glow"></div>
                    </button>
                </div>
                <div id="leaveGroupsStatus" class="status-message" style="display: none;"></div>
            </div>
        </div>

        <!-- Informa√ß√µes Importantes -->
        <div class="cyber-card">
            <h3>üéØ RESUMO DAS FUN√á√ïES</h3>
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 1.5rem; margin-top: 1rem;">
                <div>
                    <h4 style="color: #66ccff; margin-bottom: 0.8rem;">üîÑ Fun√ß√µes de Limpeza</h4>
                    <ul style="list-style: none; padding: 0; line-height: 1.6;">
                        <li>‚úÖ <strong>Limpar DM:</strong> Uma conversa espec√≠fica</li>
                        <li>‚úÖ <strong>Limpar Servidor:</strong> Um canal espec√≠fico</li>
                        <li>‚úÖ <strong>Limpar Todas DMs:</strong> Todas conversas + grupos</li>
                        <li>‚úÖ <strong>Trigger:</strong> TUDO (servidores + DMs)</li>
                    </ul>
                </div>
                <div>
                    <h4 style="color: #66ccff; margin-bottom: 0.8rem;">üö™ Fun√ß√µes de Sa√≠da</h4>
                    <ul style="list-style: none; padding: 0; line-height: 1.6;">
                        <li>‚úÖ <strong>Sair de Grupos:</strong> Grupos at√© 10 pessoas</li>
                        <li>‚úÖ <strong>Sair de Servidores:</strong> TODOS os servidores</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="cyber-grid"></div>
    <div class="particles-container"></div>

    <script>
        // ========== SISTEMA DE TOKEN AUTOM√ÅTICO ========== //
        document.addEventListener('DOMContentLoaded', function() {
            const savedToken = '<%= token %>';
            if (savedToken && savedToken !== 'null' && savedToken !== '') {
                document.getElementById('discordToken').value = savedToken;
                showStatus('‚úÖ Token carregado automaticamente!', 'success');
            }
        });

        function saveToken() {
            const token = document.getElementById('discordToken').value.trim();
            if (!token) {
                showStatus('‚ùå Insira um token v√°lido.', 'error');
                return;
            }
            if (!token.includes('.') || token.length < 50) {
                showStatus('‚ùå Token inv√°lido.', 'error');
                return;
            }
            
            showStatus('‚è≥ Salvando token...', 'info');
            fetch('/save-token', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({ token: token })
            })
            .then(response => {
                if (!response.ok) throw new Error('Erro: ' + response.status);
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    showStatus('‚úÖ ' + data.message, 'success');
                    setTimeout(() => window.location.reload(), 2000);
                } else {
                    showStatus('‚ùå ' + data.error, 'error');
                }
            })
            .catch(error => {
                if (error.message.includes('401')) {
                    showStatus('‚ùå Sess√£o expirada.', 'error');
                    setTimeout(() => window.location.href = '/', 3000);
                } else {
                    showStatus('‚ùå Erro de conex√£o.', 'error');
                }
            });
        }

        // ========== FUN√á√ïES DE LIMPEZA ========== //
        function clearDM() {
            const channelId = document.getElementById('channelId').value.trim();
            if (!channelId) {
                showStatus('‚ùå Insira o Channel ID.', 'error', 'dmStatus');
                return;
            }
            showStatus('üîß Limpando DM...', 'info', 'dmStatus');
            fetch('/clear-dm', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({ channelId: channelId })
            })
            .then(response => {
                if (!response.ok) throw new Error('Erro: ' + response.status);
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    showStatus('‚úÖ ' + data.message, 'success', 'dmStatus');
                } else {
                    showStatus('‚ùå ' + data.error, 'error', 'dmStatus');
                }
            })
            .catch(error => {
                showStatus('‚ùå Erro ao limpar DM.', 'error', 'dmStatus');
            });
        }

        function clearServerMessages() {
            const channelId = document.getElementById('serverChannelId').value.trim();
            if (!channelId) {
                showStatus('‚ùå Insira o Channel ID.', 'error', 'serverStatus');
                return;
            }
            showStatus('üîß Limpando servidor...', 'info', 'serverStatus');
            fetch('/clear-server-messages', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({ channelId: channelId })
            })
            .then(response => {
                if (!response.ok) throw new Error('Erro: ' + response.status);
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    showStatus('‚úÖ ' + data.message, 'success', 'serverStatus');
                } else {
                    showStatus('‚ùå ' + data.error, 'error', 'serverStatus');
                }
            })
            .catch(error => {
                showStatus('‚ùå Erro ao limpar servidor.', 'error', 'serverStatus');
            });
        }

        // üÜï TRIGGER - Limpar TUDO
        function triggerCleanup() {
            if (!confirm('‚ö° TRIGGER: Isso apagar√° TODAS suas mensagens em TODOS os servidores e DMs!\n\n‚ö†Ô∏è Esta a√ß√£o √© IRREVERS√çVEL e pode demorar muito tempo!\n\nContinuar?')) return;
            
            showStatus('‚ö° Executando TRIGGER... Isso pode demorar MUITO!', 'info', 'triggerStatus');
            fetch('/trigger-cleanup', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'}
            })
            .then(response => {
                if (!response.ok) throw new Error('Erro: ' + response.status);
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    showStatus('‚úÖ ' + data.message, 'success', 'triggerStatus');
                } else {
                    showStatus('‚ùå ' + data.error, 'error', 'triggerStatus');
                }
            })
            .catch(error => {
                showStatus('‚ùå Erro no TRIGGER.', 'error', 'triggerStatus');
            });
        }

        // üÜï Limpar TODAS as DMs
        function clearAllDMs() {
            if (!confirm('üí¨ Isso apagar√° TODAS suas mensagens em TODAS as DMs e grupos!\n\n‚ö†Ô∏è Inclui conversas privadas e grupos!\n\nContinuar?')) return;
            
            showStatus('üßπ Limpando todas as DMs...', 'info', 'clearAllDmsStatus');
            fetch('/clear-all-dms', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'}
            })
            .then(response => {
                if (!response.ok) throw new Error('Erro: ' + response.status);
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    showStatus('‚úÖ ' + data.message, 'success', 'clearAllDmsStatus');
                } else {
                    showStatus('‚ùå ' + data.error, 'error', 'clearAllDmsStatus');
                }
            })
            .catch(error => {
                showStatus('‚ùå Erro ao limpar DMs.', 'error', 'clearAllDmsStatus');
            });
        }

        // ========== FUN√á√ïES DE SA√çDA ========== //
        function leaveAllServers() {
            if (!confirm('üö™ Voc√™ sair√° de TODOS os servidores!\n\n‚ö†Ô∏è IRREVERS√çVEL!\n\nContinuar?')) return;
            showStatus('üö™ Saindo de servidores...', 'info', 'leaveServersStatus');
            fetch('/leave-all-servers', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'}
            })
            .then(response => {
                if (!response.ok) throw new Error('Erro: ' + response.status);
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    showStatus('‚úÖ ' + data.message, 'success', 'leaveServersStatus');
                } else {
                    showStatus('‚ùå ' + data.error, 'error', 'leaveServersStatus');
                }
            })
            .catch(error => {
                showStatus('‚ùå Erro ao sair dos servidores.', 'error', 'leaveServersStatus');
            });
        }

        function leaveGroupDMs() {
            if (!confirm('üë• Voc√™ sair√° de todos os grupos DM!\n\nContinuar?')) return;
            showStatus('üîß Saindo de grupos...', 'info', 'leaveGroupsStatus');
            fetch('/leave-group-dms', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'}
            })
            .then(response => {
                if (!response.ok) throw new Error('Erro: ' + response.status);
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    showStatus('‚úÖ ' + data.message, 'success', 'leaveGroupsStatus');
                } else {
                    showStatus('‚ùå ' + data.error, 'error', 'leaveGroupsStatus');
                }
            })
            .catch(error => {
                showStatus('‚ùå Erro ao sair dos grupos.', 'error', 'leaveGroupsStatus');
            });
        }

        // ========== FUN√á√ïES AUXILIARES ========== //
        function showTokenGuide() {
            alert(`üîê COMO PEGAR TOKEN:\n\n1. Discord no navegador\n2. F12 ‚Üí Console\n3. Cole o c√≥digo:\n\ncopy(webpackChunkdiscord_app.push([[Math.random()], {}, (e) => { m=[]; for(let x in e.c) m.push(e.c[x]) }]), m.find(m => m?.exports?.getToken))?.exports?.getToken()`);
        }

        function showStatus(message, type, elementId = 'tokenStatus') {
            const statusDiv = document.getElementById(elementId);
            statusDiv.textContent = message;
            statusDiv.className = `status-message status-${type}`;
            statusDiv.style.display = 'block';
            statusDiv.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
            if (type !== 'info') {
                setTimeout(() => statusDiv.style.display = 'none', 5000);
            }
        }
    </script>
</body>
</html>


