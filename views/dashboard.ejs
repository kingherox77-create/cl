<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>0xCL</title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Exo+2:wght@300;400;600&display=swap" rel="stylesheet">
</head>
<body>
    <div class="container">
        <div class="header">
            <h1 class="title glitch" data-text="0xCL">0xCL</h1>
            <p class="subtitle">Sistema Avan√ßado de Gerenciamento Discord</p>
        </div>

        <div class="cyber-card user-info">
            <div style="display: flex; align-items: center; margin-bottom: 1rem;">
                <img src="<%= user.avatar ? `https://cdn.discordapp.com/avatars/${user.id}/${user.avatar}.png` : '/default-avatar.png' %>" 
                     alt="Avatar" class="user-avatar">
                <div>
                    <h2>Bem-vindo, <%= user.username %>#<%= user.discriminator %></h2>
                    <p>ID: <%= user.id %></p>
                    <p style="color: #87ceeb; font-size: 0.9rem; margin-top: 0.5rem;">
                        ‚úÖ Sess√£o salva por 30 dias - Token salvo automaticamente
                    </p>
                </div>
            </div>
            <a href="/logout" class="cyber-button logout-btn">
                <span>LOGOUT</span>
                <div class="cyber-button__glow"></div>
            </a>
        </div>

        <!-- Configura√ß√£o do Token -->
        <div class="cyber-card">
            <h3>üîê CONFIGURAR TOKEN</h3>
            <p>Configure seu token do Discord para habilitar todas as funcionalidades</p>
            <div class="token-form">
                <div class="form-group">
                    <label for="discordToken">Token do Discord:</label>
                    <input type="password" id="discordToken" class="form-input" 
                           placeholder="Cole seu token aqui...">
                </div>
                <button onclick="saveToken()" class="cyber-button">
                    <span>SALVAR TOKEN</span>
                    <div class="cyber-button__glow"></div>
                </button>
                <button onclick="showTokenGuide()" class="cyber-button" style="background: linear-gradient(45deg, #87ceeb, #4682b4);">
                    <span>COMO PEGAR TOKEN</span>
                    <div class="cyber-button__glow"></div>
                </button>
            </div>
            <div id="tokenStatus" class="status-message" style="display: none;"></div>
            
            <!-- Status do Token -->
            <div class="token-status" style="margin-top: 1rem; padding: 0.5rem; border-radius: 5px; background: rgba(135, 206, 235, 0.1); border: 1px solid #87ceeb;">
                <p style="margin: 0; font-size: 0.9rem;">
                    <% if (token) { %>
                        ‚úÖ <strong>Token configurado:</strong> Todas as fun√ß√µes est√£o dispon√≠veis
                    <% } else { %>
                        ‚ö†Ô∏è <strong>Token n√£o configurado:</strong> Configure o token para usar as fun√ß√µes
                    <% } %>
                </p>
            </div>
        </div>

        <!-- Grid de Funcionalidades -->
        <div class="function-grid">
            <!-- Limpar DM -->
            <div class="cyber-card">
                <h3>üßπ LIMPAR DM</h3>
                <p>Apague suas mensagens em conversas privadas</p>
                <div class="dm-form">
                    <div class="form-group">
                        <label for="channelId">Channel ID da DM:</label>
                        <input type="text" id="channelId" class="form-input" 
                               placeholder="ID do canal da DM...">
                    </div>
                    <button onclick="clearDM()" class="cyber-button">
                        <span>LIMPAR MENSAGENS</span>
                        <div class="cyber-button__glow"></div>
                    </button>
                </div>
                <div id="dmStatus" class="status-message" style="display: none;"></div>
                <div style="margin-top: 1rem; padding: 0.8rem; background: rgba(135, 206, 235, 0.1); border-radius: 5px; border-left: 3px solid #87ceeb;">
                    <p style="margin: 0; font-size: 0.85rem; color: #87ceeb;">
                        <strong>üí° Dica:</strong> Clique com bot√£o direito no canal ‚Üí Copiar ID
                    </p>
                </div>
            </div>

            <!-- Limpar Mensagens em Servidor -->
            <div class="cyber-card">
                <h3>üè¢ LIMPAR SERVIDOR</h3>
                <p>Apague suas mensagens em canais de servidor</p>
                <div class="server-form">
                    <div class="form-group">
                        <label for="serverChannelId">Channel ID do Servidor:</label>
                        <input type="text" id="serverChannelId" class="form-input" 
                               placeholder="ID do canal do servidor...">
                    </div>
                    <button onclick="clearServerMessages()" class="cyber-button">
                        <span>LIMPAR MENSAGENS</span>
                        <div class="cyber-button__glow"></div>
                    </button>
                </div>
                <div id="serverStatus" class="status-message" style="display: none;"></div>
                <div style="margin-top: 1rem; padding: 0.8rem; background: rgba(135, 206, 235, 0.1); border-radius: 5px; border-left: 3px solid #87ceeb;">
                    <p style="margin: 0; font-size: 0.85rem; color: #87ceeb;">
                        <strong>üí° Dica:</strong> Funciona em qualquer canal de servidor
                    </p>
                </div>
            </div>

            <!-- Sair de Servidores -->
            <div class="cyber-card">
                <h3>üö™ SAIR DE SERVIDORES</h3>
                <p>Saia automaticamente de todos os servidores</p>
                <div class="leave-form">
                    <div class="form-group">
                        <p style="color: #ff6b6b; font-size: 0.9rem; font-weight: bold;">
                            ‚ö†Ô∏è IRREVERS√çVEL: Voc√™ sair√° de TODOS os servidores
                        </p>
                    </div>
                    <button onclick="leaveAllServers()" class="cyber-button" style="background: linear-gradient(45deg, #ff6b6b, #ee5a52);">
                        <span>SAIR DE TODOS OS SERVIDORES</span>
                        <div class="cyber-button__glow"></div>
                    </button>
                </div>
                <div id="leaveServersStatus" class="status-message" style="display: none;"></div>
                <div style="margin-top: 1rem; padding: 0.8rem; background: rgba(255, 107, 107, 0.1); border-radius: 5px; border-left: 3px solid #ff6b6b;">
                    <p style="margin: 0; font-size: 0.85rem; color: #ff6b6b;">
                        <strong>‚ö†Ô∏è Cuidado:</strong> Esta a√ß√£o n√£o pode ser desfeita
                    </p>
                </div>
            </div>

            <!-- Sair de Grupos DM -->
            <div class="cyber-card">
                <h3>üë• SAIR DE GRUPOS DM</h3>
                <p>Saia de grupos DM com at√© 10 pessoas</p>
                <div class="leave-form">
                    <div class="form-group">
                        <p style="color: #ffa726; font-size: 0.9rem;">
                            ‚ö†Ô∏è Sair√° apenas de grupos, n√£o de DMs individuais
                        </p>
                    </div>
                    <button onclick="leaveGroupDMs()" class="cyber-button" style="background: linear-gradient(45deg, #ffa726, #ff9800);">
                        <span>SAIR DE GRUPOS DM</span>
                        <div class="cyber-button__glow"></div>
                    </button>
                </div>
                <div id="leaveGroupsStatus" class="status-message" style="display: none;"></div>
                <div style="margin-top: 1rem; padding: 0.8rem; background: rgba(255, 167, 38, 0.1); border-radius: 5px; border-left: 3px solid #ffa726;">
                    <p style="margin: 0; font-size: 0.85rem; color: #ffa726;">
                        <strong>üí° Info:</strong> Grupos com mais de 10 pessoas n√£o ser√£o afetados
                    </p>
                </div>
            </div>
        </div>

        <!-- Estat√≠sticas e Informa√ß√µes -->
        <div class="cyber-card">
            <h3>üìä ESTAT√çSTICAS DO SISTEMA</h3>
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; margin-top: 1rem;">
                <div style="text-align: center; padding: 1rem; background: rgba(135, 206, 235, 0.1); border-radius: 8px; border: 1px solid #87ceeb;">
                    <h4 style="color: #87ceeb; margin-bottom: 0.5rem;">üõ°Ô∏è Seguran√ßa</h4>
                    <p style="font-size: 0.9rem; margin: 0;">Rate Limit Autom√°tico</p>
                    <p style="font-size: 0.8rem; color: #b0c4de; margin: 0.3rem 0 0 0;">0.4-2s entre a√ß√µes</p>
                </div>
                <div style="text-align: center; padding: 1rem; background: rgba(135, 206, 235, 0.1); border-radius: 8px; border: 1px solid #87ceeb;">
                    <h4 style="color: #87ceeb; margin-bottom: 0.5rem;">üíæ Sess√£o</h4>
                    <p style="font-size: 0.9rem; margin: 0;">30 Dias de Login</p>
                    <p style="font-size: 0.8rem; color: #b0c4de; margin: 0.3rem 0 0 0;">Salvo automaticamente</p>
                </div>
                <div style="text-align: center; padding: 1rem; background: rgba(135, 206, 235, 0.1); border-radius: 8px; border: 1px solid #87ceeb;">
                    <h4 style="color: #87ceeb; margin-bottom: 0.5rem;">‚ö° Funcionalidades</h4>
                    <p style="font-size: 0.9rem; margin: 0;">4 Ferramentas</p>
                    <p style="font-size: 0.8rem; color: #b0c4de; margin: 0.3rem 0 0 0;">Limpeza e Gest√£o</p>
                </div>
                <div style="text-align: center; padding: 1rem; background: rgba(135, 206, 235, 0.1); border-radius: 8px; border: 1px solid #87ceeb;">
                    <h4 style="color: #87ceeb; margin-bottom: 0.5rem;">üîí Privacidade</h4>
                    <p style="font-size: 0.9rem; margin: 0;">Apenas suas mensagens</p>
                    <p style="font-size: 0.8rem; color: #b0c4de; margin: 0.3rem 0 0 0;">Totalmente seguro</p>
                </div>
            </div>
        </div>

        <!-- Guia R√°pido -->
        <div class="cyber-card">
            <h3>üéØ GUIA R√ÅPIDO</h3>
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 1.5rem; margin-top: 1rem;">
                <div>
                    <h4 style="color: #87ceeb; margin-bottom: 0.8rem; display: flex; align-items: center; gap: 0.5rem;">
                        <span>üîß</span> Como Usar
                    </h4>
                    <ul style="list-style: none; padding: 0; line-height: 1.6;">
                        <li>‚úÖ 1. Configure o token (uma vez)</li>
                        <li>‚úÖ 2. Ative Modo Desenvolvedor no Discord</li>
                        <li>‚úÖ 3. Copie IDs com bot√£o direito</li>
                        <li>‚úÖ 4. Use as fun√ß√µes desejadas</li>
                    </ul>
                </div>
                <div>
                    <h4 style="color: #87ceeb; margin-bottom: 0.8rem; display: flex; align-items: center; gap: 0.5rem;">
                        <span>‚ö†Ô∏è</span> Avisos Importantes
                    </h4>
                    <ul style="list-style: none; padding: 0; line-height: 1.6;">
                        <li>üîí Nunca compartilhe seu token</li>
                        <li>‚è±Ô∏è Respeite o rate limit do Discord</li>
                        <li>üö´ A√ß√µes de sa√≠da s√£o irrevers√≠veis</li>
                        <li>üì± Use com responsabilidade</li>
                    </ul>
                </div>
                <div>
                    <h4 style="color: #87ceeb; margin-bottom: 0.8rem; display: flex; align-items: center; gap: 0.5rem;">
                        <span>üÜò</span> Suporte
                    </h4>
                    <ul style="list-style: none; padding: 0; line-height: 1.6;">
                        <li>ü§î D√∫vidas? Verifique o guia do token</li>
                        <li>üîß Problemas? Verifique o token e IDs</li>
                        <li>‚ö° Lento? Rate limit protege sua conta</li>
                        <li>‚úÖ Funciona? Teste com uma DM primeiro</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="cyber-grid"></div>
    <div class="particles-container"></div>

    <script>
        // ========== SISTEMA DE TOKEN AUTOM√ÅTICO ========== //

        // Carregar token automaticamente ao abrir a p√°gina
        document.addEventListener('DOMContentLoaded', function() {
            const savedToken = '<%= token %>';
            console.log('Token salvo:', savedToken);
            
            if (savedToken && savedToken !== 'null' && savedToken !== '') {
                document.getElementById('discordToken').value = savedToken;
                showStatus('‚úÖ Token carregado automaticamente! Todas as fun√ß√µes dispon√≠veis.', 'success');
            } else {
                showStatus('‚ö†Ô∏è Configure o token para habilitar todas as funcionalidades!', 'info');
            }
        });

        // Salvar token permanentemente
        function saveToken() {
            const token = document.getElementById('discordToken').value.trim();
            
            if (!token) {
                showStatus('‚ùå Por favor, insira um token v√°lido.', 'error');
                return;
            }

            if (!token.includes('.') || token.length < 50) {
                showStatus('‚ùå Token inv√°lido. Verifique o formato.', 'error');
                return;
            }
            
            showStatus('‚è≥ Salvando token...', 'info');
            
            fetch('/save-token', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ token: token })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Erro: ' + response.status);
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    showStatus('‚úÖ ' + data.message, 'success');
                    setTimeout(() => {
                        window.location.reload();
                    }, 2000);
                } else {
                    showStatus('‚ùå ' + data.error, 'error');
                }
            })
            .catch(error => {
                console.error('Erro:', error);
                if (error.message.includes('401')) {
                    showStatus('‚ùå Sess√£o expirada. Fa√ßa login novamente.', 'error');
                    setTimeout(() => {
                        window.location.href = '/';
                    }, 3000);
                } else {
                    showStatus('‚ùå Erro de conex√£o.', 'error');
                }
            });
        }

        // ========== FUN√á√ïES DE LIMPEZA ========== //

        function clearDM() {
            const channelId = document.getElementById('channelId').value.trim();
            
            if (!channelId) {
                showStatus('‚ùå Insira o Channel ID da DM.', 'error', 'dmStatus');
                return;
            }

            if (!/^\d+$/.test(channelId)) {
                showStatus('‚ùå Channel ID deve conter apenas n√∫meros.', 'error', 'dmStatus');
                return;
            }
            
            showStatus('üîß Limpando DM... Aguarde.', 'info', 'dmStatus');
            
            fetch('/clear-dm', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ channelId: channelId })
            })
            .then(response => {
                if (!response.ok) throw new Error('Erro: ' + response.status);
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    showStatus('‚úÖ ' + data.message, 'success', 'dmStatus');
                } else {
                    showStatus('‚ùå ' + data.error, 'error', 'dmStatus');
                }
            })
            .catch(error => {
                if (error.message.includes('401')) {
                    showStatus('‚ùå Sess√£o expirada.', 'error', 'dmStatus');
                } else if (error.message.includes('Token')) {
                    showStatus('‚ùå Configure o token primeiro.', 'error', 'dmStatus');
                } else {
                    showStatus('‚ùå Erro ao limpar DM.', 'error', 'dmStatus');
                }
            });
        }

        function clearServerMessages() {
            const channelId = document.getElementById('serverChannelId').value.trim();
            
            if (!channelId) {
                showStatus('‚ùå Insira o Channel ID do servidor.', 'error', 'serverStatus');
                return;
            }

            if (!/^\d+$/.test(channelId)) {
                showStatus('‚ùå Channel ID deve conter apenas n√∫meros.', 'error', 'serverStatus');
                return;
            }
            
            showStatus('üîß Limpando servidor... Aguarde.', 'info', 'serverStatus');
            
            fetch('/clear-server-messages', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ 
                    serverId: '0', // N√£o √© mais necess√°rio
                    channelId: channelId 
                })
            })
            .then(response => {
                if (!response.ok) throw new Error('Erro: ' + response.status);
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    showStatus('‚úÖ ' + data.message, 'success', 'serverStatus');
                } else {
                    showStatus('‚ùå ' + data.error, 'error', 'serverStatus');
                }
            })
            .catch(error => {
                if (error.message.includes('401')) {
                    showStatus('‚ùå Sess√£o expirada.', 'error', 'serverStatus');
                } else if (error.message.includes('Token')) {
                    showStatus('‚ùå Configure o token primeiro.', 'error', 'serverStatus');
                } else {
                    showStatus('‚ùå Erro ao limpar servidor.', 'error', 'serverStatus');
                }
            });
        }

        // ========== FUN√á√ïES DE SA√çDA ========== //

        function leaveAllServers() {
            if (!confirm('üö® ATEN√á√ÉO: Voc√™ sair√° de TODOS os servidores!\n\nEsta a√ß√£o √© IRREVERS√çVEL e n√£o pode ser desfeita.\n\nContinuar?')) {
                return;
            }
            
            showStatus('üö™ Saindo de servidores... Isso pode demorar.', 'info', 'leaveServersStatus');
            
            fetch('/leave-all-servers', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => {
                if (!response.ok) throw new Error('Erro: ' + response.status);
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    showStatus('‚úÖ ' + data.message, 'success', 'leaveServersStatus');
                } else {
                    showStatus('‚ùå ' + data.error, 'error', 'leaveServersStatus');
                }
            })
            .catch(error => {
                if (error.message.includes('401')) {
                    showStatus('‚ùå Sess√£o expirada.', 'error', 'leaveServersStatus');
                } else if (error.message.includes('Token')) {
                    showStatus('‚ùå Configure o token primeiro.', 'error', 'leaveServersStatus');
                } else {
                    showStatus('‚ùå Erro ao sair dos servidores.', 'error', 'leaveServersStatus');
                }
            });
        }

        function leaveGroupDMs() {
            if (!confirm('üë• Voc√™ sair√° de todos os grupos DM com at√© 10 pessoas.\n\nDMs individuais N√ÉO ser√£o afetadas.\n\nContinuar?')) {
                return;
            }
            
            showStatus('üîß Saindo de grupos DM... Aguarde.', 'info', 'leaveGroupsStatus');
            
            fetch('/leave-group-dms', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => {
                if (!response.ok) throw new Error('Erro: ' + response.status);
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    showStatus('‚úÖ ' + data.message, 'success', 'leaveGroupsStatus');
                } else {
                    showStatus('‚ùå ' + data.error, 'error', 'leaveGroupsStatus');
                }
            })
            .catch(error => {
                if (error.message.includes('401')) {
                    showStatus('‚ùå Sess√£o expirada.', 'error', 'leaveGroupsStatus');
                } else if (error.message.includes('Token')) {
                    showStatus('‚ùå Configure o token primeiro.', 'error', 'leaveGroupsStatus');
                } else {
                    showStatus('‚ùå Erro ao sair dos grupos.', 'error', 'leaveGroupsStatus');
                }
            });
        }

        // ========== FUN√á√ïES AUXILIARES ========== //

        function showTokenGuide() {
            const guide = `
üîê COMO PEGAR SEU TOKEN DO DISCORD:

1Ô∏è‚É£ Abra o Discord no NAVEGADOR (discord.com)
2Ô∏è‚É£ Pressione F12 ‚Üí Aba "Console"
3Ô∏è‚É£ Cole este c√≥digo e pressione ENTER:

copy(webpackChunkdiscord_app.push([[Math.random()], {}, (e) => { m=[]; for(let x in e.c) m.push(e.c[x]) }]), m.find(m => m?.exports?.getToken))?.exports?.getToken()

4Ô∏è‚É£ O token ser√° copiado automaticamente
5Ô∏è‚É£ Cole no campo acima e clique em SALVAR

‚ö†Ô∏è IMPORTANTE:
‚Ä¢ NUNCA compartilhe seu token
‚Ä¢ O token √© como uma senha
‚Ä¢ Apenas use em sites confi√°veis
            `;
            alert(guide);
        }

        function showStatus(message, type, elementId = 'tokenStatus') {
            const statusDiv = document.getElementById(elementId);
            statusDiv.textContent = message;
            statusDiv.className = `status-message status-${type}`;
            statusDiv.style.display = 'block';
            
            statusDiv.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
            
            if (type !== 'info') {
                setTimeout(() => {
                    statusDiv.style.display = 'none';
                }, 5000);
            }
        }
    </script>
</body>
</html>

